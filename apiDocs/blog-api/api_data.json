[  {    "type": "delete",    "url": "posts/:id",    "title": "Deletes a post",    "description": "<p>Deletes a post</p>",    "group": "Posts",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Specifies the id of the post to be deleted. This is a request param.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Response",          "content": "{\n    id: \"1ab\",\n    title: \"REST API's WITH NODE.JS\",\n    description: \"Simple blog API using Node.JS and MongoDB\",\n    author: {\n       id: \"12c\",\n       name: \"Ruben\"\n    },\n    content: \"Some content\"\n}",          "type": "json"        }      ]    },    "filename": "src/controllers/post.js",    "groupTitle": "Posts",    "name": "DeletePostsId"  },  {    "type": "get",    "url": "posts",    "title": "Get all posts",    "description": "<p>Gets an array will all posts information.</p>",    "group": "Posts",    "version": "1.0.0",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "posts",            "description": "<p>Returns an array of posts objects</p>"          }        ]      },      "examples": [        {          "title": "Response",          "content": " [{\n    id: \"1ab\",\n    title: \"REST API's WITH NODE.JS\",\n    description: \"Simple blog API using Node.JS and MongoDB\",\n    author: {\n        id: \"12c\",\n        name: \"Ruben\"\n    },\n    content: \"Some content\"\n  }, {\n        ...\n}]",          "type": "json"        }      ]    },    "filename": "src/controllers/post.js",    "groupTitle": "Posts",    "name": "GetPosts"  },  {    "type": "get",    "url": "posts/:id",    "title": "Get a post information",    "description": "<p>Gets an object</p>",    "group": "Posts",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Specifies the id of the post to be retrieved. This is a request param.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "post",            "description": "<p>Returns a post object.</p>"          }        ]      },      "examples": [        {          "title": "Response",          "content": "{\n    id: \"1ab\",\n    title: \"REST API's WITH NODE.JS\",\n    description: \"Simple blog API using Node.JS and MongoDB\",\n    author: {\n       id: \"12c\",\n       name: \"Ruben\"\n    },\n    content: \"Some content\"\n}",          "type": "json"        }      ]    },    "filename": "src/controllers/post.js",    "groupTitle": "Posts",    "name": "GetPostsId"  },  {    "type": "post",    "url": "posts",    "title": "Creates a post",    "description": "<p>Creates a post</p>",    "group": "Posts",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Specifies the title of the post. This is a body param.</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [],            "optional": true,            "field": "description",            "description": "<p>Specifies the description of the post. This is a body param.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "authorId",            "description": "<p>Specifies the author id of the post. This is a body param.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>Specifies the content of the post. This is a body param.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "post",            "description": "<p>Returns the create post object.</p>"          }        ]      },      "examples": [        {          "title": "Response",          "content": "{\n    id: \"1ab\",\n    title: \"REST API's WITH NODE.JS\",\n    description: \"Simple blog API using Node.JS and MongoDB\",\n    author: {\n       id: \"12c\",\n       name: \"Ruben\"\n    },\n    content: \"Some content\"\n}",          "type": "json"        }      ]    },    "filename": "src/controllers/post.js",    "groupTitle": "Posts",    "name": "PostPosts"  },  {    "type": "put",    "url": "posts/:id",    "title": "Updates a post",    "description": "<p>Updates a post</p>",    "group": "Posts",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Specifies the id of the post to be updated. This is a request param.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Specifies the title of the post. This is a body param.</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [],            "optional": true,            "field": "description",            "description": "<p>Specifies the description of the post. This is a body param.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "authorId",            "description": "<p>Specifies the author id of the post. This is a body param.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>Specifies the content of the post. This is a body param.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "post",            "description": "<p>Returns the updated post object.</p>"          }        ]      },      "examples": [        {          "title": "Response",          "content": "{\n    id: \"1ab\",\n    title: \"REST API's WITH NODE.JS\",\n    description: \"Simple blog API using Node.JS and MongoDB\",\n    author: {\n       id: \"12c\",\n       name: \"Ruben\"\n    },\n    content: \"Update content\"\n}",          "type": "json"        }      ]    },    "filename": "src/controllers/post.js",    "groupTitle": "Posts",    "name": "PutPostsId"  },  {    "type": "delete",    "url": "users/:id",    "title": "Deletes a user",    "description": "<p>Deletes a user</p>",    "group": "Users",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Specifies the id of the user to be deleted. This is a request param.</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Response",          "content": "{\n    id: \"1bd\",\n    name: \"gomes\"\n    email: \"gomes@gmail.com\"\n}",          "type": "json"        }      ]    },    "filename": "src/controllers/user.js",    "groupTitle": "Users",    "name": "DeleteUsersId"  },  {    "type": "delete",    "url": "users/:id/posts",    "title": "Deletes all user posts",    "description": "<p>Delets all user posts information.</p>",    "group": "Users",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Specifies the user id that the posts will be deleted. This is a request param.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "posts",            "description": "<p>Returns an array of deleted posts objects that belongs to the user</p>"          }        ]      },      "examples": [        {          "title": "Response",          "content": " [{\n    id: \"1ab\",\n    title: \"REST API's WITH NODE.JS\",\n    description: \"Simple blog API using Node.JS and MongoDB\",\n    author: {\n        id: \"1bd\",\n        name: \"gomes\"\n    },\n    content: \"Some content\"\n  }, {\n        ...\n}]",          "type": "json"        }      ]    },    "filename": "src/controllers/user.js",    "groupTitle": "Users",    "name": "DeleteUsersIdPosts"  },  {    "type": "delete",    "url": "users/:id/posts/:postId",    "title": "Deletes a user post",    "description": "<p>Deletes a user post</p>",    "group": "Users",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Specifies the user id that the post will be deleted. This is a request param.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "postId",            "description": "<p>Specifies the post id that the be deleted. This is a request param.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "post",            "description": "<p>Returns the deleted post object.</p>"          }        ]      },      "examples": [        {          "title": "Response",          "content": "{\n    id: \"1ab\",\n    title: \"REST API's WITH NODE.JS\",\n    description: \"Simple blog API using Node.JS and MongoDB\",\n    author: {\n       id: \"12c\",\n       name: \"Ruben\"\n    },\n    content: \"updated content\"\n}",          "type": "json"        }      ]    },    "filename": "src/controllers/user.js",    "groupTitle": "Users",    "name": "DeleteUsersIdPostsPostid"  },  {    "type": "get",    "url": "users",    "title": "Get all users",    "description": "<p>Gets an array will all users names and emails.</p>",    "group": "Users",    "version": "1.0.0",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "post",            "description": "<p>Returns an user object.</p>"          }        ]      },      "examples": [        {          "title": "Response",          "content": "[{\n    id: \"1bd\"\n    name: \"Ruben\",\n    email: \"ruben@gmail.com\"\n}, {\n   ...\n},...\n]",          "type": "json"        }      ]    },    "filename": "src/controllers/user.js",    "groupTitle": "Users",    "name": "GetUsers"  },  {    "type": "get",    "url": "users/:id",    "title": "Get a user information",    "description": "<p>Gets an user object</p>",    "group": "Users",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Specifies the id of the user to be retrieved. This is a request param.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>Returns an user object.</p>"          }        ]      },      "examples": [        {          "title": "Response",          "content": "{\n    id: \"1bd\",\n    name: \"gomes\"\n    email: \"gomes@gmail.com\",\n}",          "type": "json"        }      ]    },    "filename": "src/controllers/user.js",    "groupTitle": "Users",    "name": "GetUsersId"  },  {    "type": "get",    "url": "users/:id/posts",    "title": "Get all user posts",    "description": "<p>Gets an array will all user posts information.</p>",    "group": "Users",    "version": "1.0.0",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "posts",            "description": "<p>Returns an array of posts objects that belongs to the user</p>"          }        ]      },      "examples": [        {          "title": "Response",          "content": " [{\n    id: \"1ab\",\n    title: \"REST API's WITH NODE.JS\",\n    description: \"Simple blog API using Node.JS and MongoDB\",\n    author: {\n        id: \"1bd\",\n        name: \"gomes\"\n    },\n    content: \"Some content\"\n  }, {\n        ...\n}]",          "type": "json"        }      ]    },    "filename": "src/controllers/user.js",    "groupTitle": "Users",    "name": "GetUsersIdPosts"  },  {    "type": "post",    "url": "users",    "title": "Creates a user",    "description": "<p>Creates a user</p>",    "group": "Users",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Specifies the name of the user. This is a body param.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Specifies the description of the user. This is a body param.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Specifies the password of the user. This is a body param.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>Returns the created user object.</p>"          }        ]      },      "examples": [        {          "title": "Response",          "content": "{\n    id: \"1bd\",\n    name: \"gomes\"\n    email: \"gomes@gmail.com\"\n}",          "type": "json"        }      ]    },    "filename": "src/controllers/user.js",    "groupTitle": "Users",    "name": "PostUsers"  },  {    "type": "post",    "url": "users/:id/posts",    "title": "Creates a user post",    "description": "<p>Creates a user post</p>",    "group": "Users",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Specifies the user id that the post will be attached. This is a request param.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Specifies the title of the post. This is a body param.</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [],            "optional": true,            "field": "description",            "description": "<p>Specifies the description of the post. This is a body param.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>Specifies the content of the post. This is a body param.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "post",            "description": "<p>Returns the create post object.</p>"          }        ]      },      "examples": [        {          "title": "Response",          "content": "{\n    id: \"1ab\",\n    title: \"REST API's WITH NODE.JS\",\n    description: \"Simple blog API using Node.JS and MongoDB\",\n    author: {\n       id: \"12c\",\n       name: \"Ruben\"\n    },\n    content: \"Some content\"\n}",          "type": "json"        }      ]    },    "filename": "src/controllers/user.js",    "groupTitle": "Users",    "name": "PostUsersIdPosts"  },  {    "type": "post",    "url": "users/:id/posts/:postId",    "title": "Updates a user post",    "description": "<p>Updates a user post</p>",    "group": "Users",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Specifies the user id that the post will be updated. This is a request param.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "postId",            "description": "<p>Specifies the post id that the be updated. This is a request param.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Specifies the title of the post. This is a body param.</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [],            "optional": true,            "field": "description",            "description": "<p>Specifies the description of the post. This is a body param.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>Specifies the content of the post. This is a body param.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "post",            "description": "<p>Returns the updated post object.</p>"          }        ]      },      "examples": [        {          "title": "Response",          "content": "{\n    id: \"1ab\",\n    title: \"REST API's WITH NODE.JS\",\n    description: \"Simple blog API using Node.JS and MongoDB\",\n    author: {\n       id: \"12c\",\n       name: \"Ruben\"\n    },\n    content: \"updated content\"\n}",          "type": "json"        }      ]    },    "filename": "src/controllers/user.js",    "groupTitle": "Users",    "name": "PostUsersIdPostsPostid"  }]
